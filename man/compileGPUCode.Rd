% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpuApply.R
\name{compileGPUCode}
\alias{compileGPUCode}
\title{Compile the R function without excute it in the device.}
\usage{
compileGPUCode(X, FUN, ..., .macroParms = NULL,
  .options = gpuSapply.getOption())
}
\arguments{
\item{X}{a vector that \code{FUN} will loop over.}

\item{FUN}{The function to be applied to each elemtn of \code{X}}

\item{...}{optional arguments to \code{FUN}}

\item{.macroParms}{The function argument that will be treated as macro in the code.
If an argument is treated as macro, its value cannot be changed by the code}

\item{.options}{The package and openCL compilation options, please call \code{gpuSapply.getOption()} to get all the available options}
}
\value{
A list of compilation information
}
\description{
Compile the R function without excute it in the device.
}
\examples{
#matrix add function
matAdd<-function(ind,A,B){
C=A[,ind]+B[,ind]
return(C)
}

n=100
m=200
#Create the data
A=matrix(runif(n*m),n,m)
B=matrix(runif(n*m),n,m)
#Compile the R code
res=compileGPUCode(1:m,matAdd,A,B)
#print GPU code
cat(res$gpu_code)
}
