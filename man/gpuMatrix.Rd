% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpuMatix.R
\docType{methods}
\name{gpuMatrix}
\alias{gpuMatrix}
\alias{gpuEmptMatrix}
\alias{upload}
\alias{upload,gpuMatrix-method}
\alias{download}
\alias{download,gpuMatrix-method}
\alias{nrow}
\alias{nrow,gpuMatrix-method}
\alias{dim,gpuMatrix-method}
\alias{dim}
\alias{length}
\alias{length,gpuMatrix-method}
\alias{getSize}
\alias{getSize,gpuMatrix-method}
\title{gpuMatrix class}
\usage{
gpuMatrix(data, type = "auto", device = "auto")

gpuEmptMatrix(row = 1, col = 1, type = "auto", device = "auto")

upload(x)

download(x)

nrow(x)

\S4method{dim}{gpuMatrix}(x)

\S4method{length}{gpuMatrix}(x)

getSize(x)
}
\arguments{
\item{data}{It can be a matrix or an R object that can be converted into a matrix.}

\item{type}{The precision that is used to store the data, the default is \code{gpuMagic.getOptions("default.float")}.}

\item{device}{The device that the data is sent to, the default is the first device.}

\item{row, col}{the row and column number of the matrix}

\item{x}{an gpuMatrix object}
}
\value{
\code{\link[=gpuMatrix]{gpuMatrix()}}: A gpuMatrix object

\code{\link[=gpuEmptMatrix]{gpuEmptMatrix()}}: A gpuMatrix object
}
\description{
gpuMatrix class
}
\details{
\code{gpuMatrix()}: Create a matrix in an openCL device

\code{gpuEmptMatrix()}: Create an empty matrix without initialization in an openCL device

\code{upload()}: The function will automatically be called when an gpuMatrix object is created.
It is only needed when you want to update value of the matrix.

\code{download()}: Get the data from the device. You should explicitly call it when you want to collect the data from the device.

\code{nrow()},\code{ncol()}: return the number of rows or columns present in \code{x}

\code{dim()}: Retrieve the dimension of an gpuMatrix object

\code{length()}: Get the length of an gpuMatrix object.

"getSize()": Get the matrix size in byte
}
\examples{
n=10
m=20
A=matrix(runif(n*m),n,m)
#Create a 64 bit floating point GPU matrix
A_dev=gpuMatrix(A,"double")

#Create an empty matrix
B_dev=gpuEmptMatrix(row=n,col=m)
}
